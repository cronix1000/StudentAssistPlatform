@model IEnumerable<StudentAssistPlatform.Controllers.CalenderController.CalenderTask>

<style>
    .calendar {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        gap: 1rem;
    }

    .calendar-day {
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 10px;
        background-color: #f9f9f9;
        min-height: 100px;
        overflow-y: auto;
    }

        .calendar-day h5 {
            margin: 0 0 5px;
            font-size: 14px;
        }

    .task-link {
        display: block;
        margin-top: 5px;
        font-size: 12px;
        color: #007bff;
        text-decoration: none;
    }

        .task-link:hover {
            text-decoration: underline;
        }
</style>

<div class="container mt-5">
    <h1 class="text-center">Daily Learning Flow</h1>
    <hr />
    <div id="calendar" class="calendar"></div>
</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

@section Scripts {
    <script>
        // Parse tasks from server-side model
        const tasks = @Html.Raw(Json.Serialize(Model));

        function initCalendar(month, year) {
            const daysInMonth = new Date(year, month + 1, 0).getDate();
            const firstDay = new Date(year, month, 1).getDay();
            const calendar = $("#calendar");
            calendar.empty();

            // Add empty slots for days before the first day of the month
            for (let i = 0; i < firstDay; i++) {
                calendar.append('<div class="calendar-day"></div>');
            }

            // Add days with tasks
            for (let day = 1; day <= daysInMonth; day++) {
                // Format date to match model format (YYYY-MM-DD)
                const date = `${year}-${String(month + 1).padStart(2, "0")}-${String(day).padStart(2, "0")}`;
                const dayTask = tasks.find(task => task.date === date);  // Use correct property name "Date"

                let dayHtml = `<div class="calendar-day">
                                <h5>${day}</h5>`;


                console.log(dayTask)


                if (dayTask) {
                    dayHtml += `
                                <a href="/Calender/Resources?title=${dayTask.title}&description=${dayTask.description}&resources=${dayTask.resources}&recallPrompt=${dayTask.recallPrompt}"
                   class="dayTask-link" target="_blank">
                    ${dayTask.title}
                </a>`;
                }

                

                dayHtml += "</div>";
                calendar.append(dayHtml);
            }
        }

        // Initialize the calendar with the current month
        const today = new Date();
        initCalendar(today.getMonth(), today.getFullYear());
    </script>
}
